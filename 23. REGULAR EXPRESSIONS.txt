regular expressions module we can import using re
\d --> digit
\D --> non digit
\s --> white space
\S --> non white space
\w --> any alpha numeric
\W --> non alpha numeric
\A --> start of the string
\Z --> end of the string
ex 1:
import re
str = "Take up one idea. One idea at a time"
# returns the first substring that starts with o contains 3 letters only
re.search(r'o\w\w', str)
re.search(r'o\w', str)
print(result.group())

findall--> all the substring that matches
match --> it will begining, if not match it returns none

ex: 2
import re
str = "Take up one idea. One idea at a time"
result = re.search(r'o\w', str)
print(result)
result = re.match(r'\T\w\w', str)
print(result.group())

split() --> used to split at given character

ex: 3
import re
str = "Take 1 up one 23 idea one at a time"
result = re.split(r'\d+', str)
print(result)

sub()
ex: 4
import re
str = "Take 1 up one 23 idea one at a time"
result = re.sub(r'one','two', str)
print(result)

Quantifiers
\d+ --> means one or more digits (+ one or more,  * more, ? zero or one {m} exactly m occurances, {m, n} min and max)
import re
str = "Take 1 up one 23 idea one at a time"
result = re.findall(r'O\w+', str)
result = re.findall(r'O\w?', str)
result = re.findall(r'O\w{1}', str) # one occurance {2} search for two occurances
result = re.findall(r'O\w{1,3}', str)
print(result)

Days using regular expressions

import re
str = "Take up 1-3-2019 one 23 idea. one idea"
result = re.findall(r'\d{1,2}-\d{1,2}-\d{4}, str)

special characters
\ escape character
. single character
^ begining character
$ end of the character
[..] range of the characters
[^..] matches all except these characters
(...)
(R | S) matches with R or S regular expressions

ex:
import re
str = "take 1 up 1-3-2019 idea one idea at a time"
result = re.search(r'^T\w', str)
print(result.group())
result = re.search(r'^T\w*', str)
print(result.group())





